{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shreyansh/messaging-app/client/src/app/messages/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { io, Socket } from 'socket.io-client';\nimport { Plus, LogOut, Settings } from 'lucide-react';\n\n\ninterface Message {\n    senderId: string;\n    senderUsername: string,\n    content: string;\n    timestamp: string;\n}\n\ninterface Conversation {\n    id: string;\n    email: string;\n    username?: string;\n    avatar: string;\n    lastMessage?: string;\n    timestamp: string;\n}\n\nfunction ChatItem({ username, avatar, timestamp, lastMessage }: Conversation) {\n    return (\n        <div className=\"flex items-center justify-between px-4 py-4 hover:bg-gray-100 transition cursor-pointer\">\n            <div className=\"flex items-center space-x-3\">\n                <img\n                    src={avatar ? `http://localhost:6543${avatar}` : '/echologo.png'}\n                    alt=\"avatar\"\n                    className=\"w-14 h-14 rounded-full object-cover\"\n                    onError={(e) => {\n                        e.currentTarget.src = '/echologo.png';\n                    }}\n                />\n                <div className=\"ml-4\">\n                    <p className=\"text-xl font-semibold text-black\">{username}</p>\n                    <p className=\"text-s text-gray-600 truncate w-70\">{lastMessage}</p>\n                </div>\n            </div>\n            <div className=\"text-s text-gray-400 text-right min-w-[50px]\">\n                <p>{new Date(timestamp).toLocaleString('en-US', {\n                    timeZone: 'America/Los_Angeles',\n                    month: 'short',\n                    day: 'numeric',\n\n                })}</p>\n            </div>\n        </div>\n    );\n}\n\nfunction NewChatItem({ username, avatar }: Conversation) {\n    return (\n        <div className=\"flex items-center justify-between px-4 py-1 transition cursor-pointer\">\n            <div className=\"flex items-center space-x-3\">\n                <img\n                    src={avatar ? `http://localhost:6543${avatar}` : '/echologo.png'}\n                    alt=\"avatar\"\n                    className=\"w-14 h-14 rounded-full object-cover\"\n                    onError={(e) => {\n                        e.currentTarget.src = '/echologo.png';\n                    }}\n                />\n                <div className=\"text-xl ml-2\">\n                    <p className=\"font-semibold text-black\">{username}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default function MessagesPage() {\n    const [conversations, setConversations] = useState<Conversation[]>([]);\n    const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [allUsers, setAllUsers] = useState<Conversation[]>([]);\n    const [showUserList, setShowUserList] = useState(false);\n    const [currentUserEmail, setCurrentUserEmail] = useState('');\n    const [currentUserId, setCurrentUserId] = useState('');\n    const [currentUsername, setCurrentUsername] = useState('');\n    const router = useRouter();\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const prevMessageCountRef = useRef<number>(0);\n    const socketRef = useRef<Socket | null>(null);\n    const handleLogout = async () => {\n        await fetch('http://localhost:6543/api/signout', {\n            method: 'POST',\n            credentials: 'include',\n        });\n        router.push('/login');\n    };\n\n    // connect socket\n    useEffect(() => {\n        socketRef.current = io('http://localhost:6543');\n\n        const handleNewConversation = async (newConvo: Conversation) => {\n            setConversations((prev) => {\n                const exists = prev.some((c) => c.id === newConvo.id);\n                if (exists) return prev;\n                return [newConvo, ...prev];\n            });\n            await fetchUsers();\n        };\n\n        socketRef.current.on('newConversation', handleNewConversation);\n\n        return () => {\n            socketRef.current?.off('newConversation', handleNewConversation);\n            socketRef.current?.disconnect();\n        };\n\n    }, []);\n\n    useEffect(() => {\n        if (!socketRef.current) return;\n        const handleReceiveMessage = (message: Message) => {\n            // 1. Append to message view if current conversation is open\n            if (\n                selectedConversation &&\n                (message.senderId === selectedConversation.id || message.senderId === currentUserId)\n            ) {\n                setMessages((prev) => [...prev, message]);\n            }\n\n            // 2. Update conversations list (last message + timestamp + reorder)\n            setConversations((prev) => {\n                const otherId = message.senderId === currentUserId ? selectedConversation?.id : message.senderId;\n\n                const updated = prev.map((conv) =>\n                    conv.id === otherId\n                        ? { ...conv, lastMessage: message.content, timestamp: message.timestamp }\n                        : conv\n                );\n\n                const sorted = [...updated].sort(\n                    (a, b) => new Date(b.timestamp ?? 0).getTime() - new Date(a.timestamp ?? 0).getTime()\n                );\n\n                return sorted;\n            });\n        };\n\n        socketRef.current.on('receive_message', handleReceiveMessage);\n\n        return () => {\n            socketRef.current?.off('receive_message', handleReceiveMessage);\n        };\n    }, [selectedConversation]);\n\n    // autoscroll to most recent message\n    useEffect(() => {\n        if (messages.length > prevMessageCountRef.current) {\n            messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        }\n        prevMessageCountRef.current = messages.length;\n    }, [messages]);\n\n    // labeling messages\n    useEffect(() => {\n\n\n        const fetchMe = async () => {\n            const res = await fetch('http://localhost:6543/api/me', {\n                credentials: 'include'\n            });\n            if (!res.ok) {\n                console.error('Failed to fetch users:', res.status);\n                return;\n            }\n            const data = await res.json();\n            setCurrentUserEmail(data.email);\n            setCurrentUserId(data.id);\n            setCurrentUsername(data.username);\n            socketRef.current?.emit('register', data.id);\n        };\n\n        fetchMe();\n    }, []);\n\n    const fetchUsers = async () => {\n        const res = await fetch('http://localhost:6543/api/users', {\n            credentials: 'include'\n        });\n        if (!res.ok) {\n            console.error('Failed to fetch users:', res.status);\n            return;\n        }\n        const data = await res.json();\n        const formatted = data.users.map((user: any) => ({\n            username: user.username,\n            id: user.id,\n            avatar: user.avatar || '',\n        }));\n\n        setAllUsers(formatted);\n    };\n\n    // fetch possible new users to talk to\n    useEffect(() => {\n        // fetch users only once on mount\n\n        fetchUsers();\n\n    }, []);\n\n    // fetch conversations when the page loads\n    useEffect(() => {\n\n\n        const fetchConversations = async () => {\n            const res = await fetch('http://localhost:6543/api/conversations', {\n                credentials: 'include'\n\n            });\n            if (!res.ok) {\n                console.error('Failed to fetch users:', res.status);\n                return;\n            }\n            const data = await res.json();\n\n            const formatted = data.conversations.map((conv: any) => ({\n                username: conv.username,\n                email: conv.email,\n                id: conv.id,\n                avatar: conv.avatar,\n                lastMessage: conv.lastMessage,\n                timestamp: conv.timestamp,\n            }));\n            setConversations(formatted);\n        };\n\n        fetchConversations(); // initial load\n\n    }, []);\n\n    // fetch messages when a conversation is selected\n    useEffect(() => {\n        if (!selectedConversation) return;\n\n        const fetchMessages = async () => {\n            const res = await fetch(`http://localhost:6543/api/conversations/${selectedConversation.id}/messages`, {\n                credentials: 'include'\n            });\n            if (!res.ok) {\n                console.error('Failed to fetch users:', res.status);\n                return;\n            }\n            const data = await res.json();\n            setMessages(data.messages);\n        };\n\n        fetchMessages();\n    }, [selectedConversation]);\n\n    // handle when user sends a new message in current conversation\n    const handleSendMessage = async () => {\n        if (newMessage.trim() && selectedConversation) {\n            const messageData = {\n                senderId: currentUserId,\n                recipientId: selectedConversation.id,\n                content: newMessage,\n            };\n\n            socketRef.current?.emit('send_message', messageData);\n\n            const now = new Date().toISOString();\n\n            // update conversation list optimistically\n            setConversations((prev) => {\n                const updated = prev.map((conv) =>\n                    conv.id === selectedConversation.id\n                        ? { ...conv, lastMessage: newMessage, timestamp: now }\n                        : conv\n                );\n\n                return updated.sort(\n                    (a, b) => new Date(b.timestamp ?? 0).getTime() - new Date(a.timestamp ?? 0).getTime()\n                );\n            });\n\n            setNewMessage('');\n        }\n    };\n\n    return (\n        <div className=\"flex min-h-screen bg-[#f1e9e6] text-[#23262a]\">\n            <div className=\"w-full max-w-1/5 mx-auto bg-white rounded-xl shadow-md overflow-hidden\">\n                <div className=\"relative flex items-center justify-between px-4 py-3 border-b\">\n                    <h2 className=\"text-2xl font-bold\">Chats (as {currentUsername})</h2>\n                    <div className=\"flex items-center space-x-2\">\n                        <div className=\"\">\n                            <button\n                                className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600\"\n                                onClick={() => setShowUserList(!showUserList)}\n                                aria-label=\"New Conversation\"\n                            >\n                                <Plus size={18} />\n                            </button>\n\n                            {showUserList && (\n                                <ul className=\"absolute left-0 right-0 top-12 z-50 max-h-60 w-full overflow-y-auto border-5 border-green-600 rounded bg-white shadow-lg\">\n                                    {allUsers.map((user) => (\n                                        <div\n                                            key={user.id}\n                                            onClick={() => {\n                                                setSelectedConversation(user);\n                                                setShowUserList(false);\n                                            }}\n                                            className=\"cursor-pointer text-black hover:bg-green-300 p-2 rounded\"\n                                        >\n                                            <NewChatItem {...user} />\n                                        </div>\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                        <button\n                            className=\"bg-blue-500 text-white p-2 rounded hover:bg-gray-300\"\n                            onClick={() => console.log('Settings clicked')}\n                            aria-label=\"Settings\"\n                        >\n                            <Settings size={18} />\n                        </button>\n                        <button\n                            className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600\"\n                            onClick={handleLogout}\n                            aria-label=\"Logout\"\n                        >\n                            <LogOut size={18} />\n                        </button>\n                    </div>\n                </div>\n\n                <div>\n                    {conversations.map((conv) => (\n                        <div\n                            key={conv.id}\n                            onClick={() => setSelectedConversation(conv)}\n                            className=\"hover:bg-gray-100 cursor-pointer\"\n                        >\n                            <ChatItem {...conv} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"flex-1 p-4\">\n                {selectedConversation ? (\n                    <>\n                        <h2 className=\"text-2xl font-semibold mb-4\">{selectedConversation.username ?? selectedConversation.email}</h2>\n                        <div className=\"space-y-4 h-[60vh] overflow-y-scroll border-b pb-4\">\n                            {messages.map((message, index) => (\n                                <div key={index} className=\"flex flex-col\">\n                                    <div className=\"font-semibold text-gray-600\">\n                                        {message.senderId === currentUserId ? 'You' : message.senderUsername}\n                                    </div>\n                                    <div>{message.content}</div>\n                                    <div className=\"text-sm text-gray-400\">{new Date(message.timestamp).toLocaleString('en-US', {\n                                        timeZone: 'America/Los_Angeles',\n                                        month: 'short',\n                                        day: 'numeric',\n                                        year: 'numeric',\n                                        hour: '2-digit',\n                                        minute: '2-digit',\n                                        hour12: true,\n                                    })}</div>\n                                </div>\n                            ))}\n                            <div ref={messagesEndRef} />\n                        </div>\n                        <div className=\"mt-4\">\n                            <input\n                                type=\"text\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                className=\"w-full p-2 border rounded\"\n                                placeholder=\"Type a message...\"\n                            />\n                            <button\n                                onClick={handleSendMessage}\n                                className=\"w-full bg-blue-500 text-white py-2 mt-2 rounded hover:bg-blue-600\"\n                            >\n                                Send\n                            </button>\n                        </div>\n                    </>\n                ) : (\n                    <div className=\"text-center\">Select a conversation to view messages</div>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}